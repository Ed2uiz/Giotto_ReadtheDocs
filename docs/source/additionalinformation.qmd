---
title: "Changelog"
format: rst
---



# Giotto Suite 3.1.0 (2202-12-01)  
  

## Added
- New `initialize()` generic that calls `setalloccol()` for data.table-based S4 subobjects to allow setting by reference
- New `spatUnit`, `spatUnit<-`, `featType`, and `featType<-` feat type generics for S4 subobjects for setting the relevant slots
- Add `hexVertices()` to polygon shape array generation functionality

## Changes  
- Update `createGiottoCosMxObject()` for 3.0 and modularization of functions. 'subcellular' workflow has been tested to work along with an updated tutorial.
- Update grid plotting behavior to set a default number columns to use based on number of elements to plot. Can be overridden by explicitly providing input to `cow_n_col` param
- Fix bug in `annotateGiotto()` after 3.0 update ([#433](https://github.com/drieslab/Giotto/issues/433#issuecomment-1324211224))
- Fix bug in `joinGiottoObjects()` metadata processing
- Update seed setting behavior in [dimension_reduction.R](https://github.com/drieslab/Giotto/blob/suite/R/dimension_reduction.R) and [clustering.R](https://github.com/drieslab/Giotto/blob/suite/R/clustering.R)





# Giotto Suite 3.0.1 (2022-11-20)

## Added
- New system color support detection (based on crayon package logic)
- Add ability to turn off colored text in `show` functions with `options("giotto.color_show" = FALSE)`

## Changes
- Fix bug in `extract_polygon_list()` ([#433](https://github.com/drieslab/Giotto/issues/433#issuecomment-1321221382))
- Update Unicode character printing with `show` functions for Latin1 systems


# Giotto Suite 3.0.0 (2022-11-18)

## Breaking Changes
- S4 subobjects framework will require giotto objects to be remade

## New features
- New `createGiottoXeniumObject()` for loading 10x Xenium data
- New S4 subobjects. Details can be found in [classes.R](https://github.com/drieslab/Giotto/blob/suite/R/classes.R)
- New basic generics for S4 subobjects. Mainly the use of `[]` and `[]<-` to get or set information into the main data slot
- New `@provenance` slot in S4 subobjects to track provenance of aggregated information (z_layers used for example)
- Working with intensity based data

   -  calculateOverlapPolygonImages: calculates overlapping intensities from image based information (e.g. IMC, IF, MIBI, …) and polygon data (e.g. cell)
   -  overlapImagesToMatrix: converts intensity-polygon overlap information into a matrix (e.g. cell by protein)

- Aggregation of layers for subcellular datasets

   -  aggregateStacksExpression: aggregate expression matrices from multiple layers (e.g. z-stacks through the same cell)
   -  aggregateStacksPolygons: aggregate polygon shapes from multiple layers
   -  aggregateStacksPolygonOverlaps: aggregate feature - polygon overlap information from multiple layers
   -  aggregateStacks: combines the previous aggregate* functions

## Changes
- Update `setter` functions to read the `@spat_unit` and `@feat_type` slots of subobjects to determine nesting
- Update of `show` functions to display color coded nesting names and tree structure



# Giotto Suite 2.1.0 (2202-11-09)

## Breaking Changes

-  The default giotto python version has been upgraded to 3.10.2, and
   the following package versions are associated with the environment:

   -  pandas==1.5.1
   -  networkx==2.8.8
   -  python-igraph==0.10.2
   -  leidenalg==0.9.0
   -  python-louvain==0.16
   -  python.app==1.4
   -  scikit-learn==1.1.3

## New features

-  Created new function anndataToGiotto()

   -  Enables conversion of anndata object of scanpy flavor to Giotto.
   -  The function currently handles dimension reductions (PCA, UMAP,
      tSNE), metadata, expression information, spatial locations, and
      layered data.
   -  This function will be extended to include more information from
      the anndata object in the future.

# Giotto Suite 2.0.0.998

## New features

-  GiottoData package

   -  New package to work with spatial data associated with Giotto
   -  Stores the minidatasets: preprocessed giotto objects that are
      ready to be used in any function
   -  Moved: getSpatialDataset and loadGiottoMini functions to this
      package

-  I/O functions

   -  saveGiotto
   -  loadGiotto

      -  All above functions to general_help.R

   -  It saves a Giotto object into a folder using a specific structure.
      It’s essentially a wrapper around saveRDS that also works with
      spatVector and spatRaster pointers.

-  Interactive Polygon Filtering

   -  plotInteractivePolygon
   -  RShiny Gadget that enables interactive ROI filtering with polygons
      and the terra package

-  Polygon stamping functions

   -  polyStamp
   -  circleVertices
   -  rectVertices

      -  All above functions are in giotto_structures.R

   -  circle and rect Vertices functions generate data.tables of x and y
      vertices that represent the respective shapes. Vertex information
      is accepted by the polyStamp function along with a table of
      spatlocs with ‘sdimx’, ‘sdimy’, and ‘cell_ID’. A data.table of
      polygon vertices placed at each spatloc with the respective
      ‘cell_ID’ will then be generated.

## Minor improvements and bug fixes

-  Accessor functions

   -  get_CellMetadata (alias to pDataDT)
   -  set_CellMetadata
   -  get_FeatMetadata (alias to fDataDT)
   -  set_FeatMetadata

      -  All above functions to accessors.R

   -  Required inputs: gobject, spat_unit, feat_type, data.table with
      new metadata (for setters)
   -  *Note that setters will overwrite the entire metadata slot with
      whatever is provided as a replacement argument*

-  filterDistributions

   -  auxiliary_giotto.R
   -  Extended distribution summary to threshold, sum, and mean
   -  Added a flexible way to scale the y-axis

-  plotInteractionChangedFeatures

   -  spatial_interaction_visuals.R
   -  Adapted from plotInteractionChangedGenes
   -  Also made shorthand plotICF; deprecated plotICG and plotCPG

-  plotCombineInteractionChangedFeatures

   -  spatial_interaction_visuals.R
   -  Adapted from plotCombineInteractionChangedGenes
   -  Also made shorthand plotCombineICF; deprecated plotCombineICG and
      plotCombineCPG

-  plotCellProximityFeatures

   -  spatial_interaction_visuals.R
   -  Semantics change
   -  Also made shorthand plotCPF; deprecated plotCellProximityGenes and
      plotCPG

-  findInteractionChangedFeats

   -  spatial_interactions.R
   -  Adapted from findInteractionChangedGenes
   -  Also made shorthand findICF; deprecated findICG and findCPG

-  filterInteractionChangedFeats

   -  spatial_interactions.R
   -  Adapted from filterInteractionChangedGenes
   -  Also made shorthand filterICF; deprecated filterICG and filterCPG

-  combineInteractionChangedFeats

   -  spatial_interactions.R
   -  Adapted from combineInteractionChangedGenes
   -  Also made shorthand combineICF; deprecated combineICG and
      combineCPG

-  combineInteractionChangedFeatures_per_interaction,

   -  spatial_interactions.R
   -  Updated from combineCellProximityGenes_per_interaction
   -  Internal function which replaces
      combineCellProximityGenes_per_interaction
